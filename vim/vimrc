" vim: nocp fen fdm=marker fdl=0 tw=78 cc=78 noet

" if &compatible
" 	set nocompatible
" endif

set exrc
set secure
set modeline
set noswapfile
set nobackup
set hidden
set lazyredraw
"set nottyfast
set backspace=indent,eol,start
set mouse=nvi

filetype plugin indent on
syntax enable

" Persistent undo {{{
set undofile
if empty(glob("~/.vim/undo"))
	call mkdir($HOME . "/.vim/undo", "p")
endif
set undodir=~/.vim/undo
" }}}

" Key maps {{{
nnoremap ; :
"let mapleader = "\\"
let maplocalleader = "\<Space>"
map <LocalLeader>, :tabnew $MYVIMRC<cr>
" Don't use arrow keys:
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>
" Number toggle:
nnoremap <silent> <Leader>n :set number! relativenumber!<CR>
" Don't use Ex mode, use Q for formatting:
map Q gq
" Make Y consistent with C and D.
nnoremap Y y$
" Switch to last buffer:
nnoremap <bs> <c-^>
" Fold navigation
nnoremap <tab> zj
nnoremap <S-tab> zk
" Tab navigation
nmap > gt
nmap < gT
" Indent whole file
nnoremap <Leader>= gg=G
" Copy whole file
nnoremap <Leader>y ggyG
" Save faster
nnoremap <LocalLeader>w :w<cr>
" Quit faster
nnoremap <LocalLeader>q :q<cr>
" Save & quit faster
nnoremap <LocalLeader>wq :wq<cr>
" Zoom split
map  <C-w>z <C-w>\|<C-w>_
" }}}

" Splits the right way. {{{
set splitbelow
set splitright
" }}}

" Tabs {{{
set noexpandtab
set shiftround
set shiftwidth=4
set smarttab
set softtabstop=4
set tabstop=4
" }}}

" Indentation {{{
set autoindent
set copyindent
set preserveindent
set linebreak
set nowrap
" }}}

" Search {{{
set hlsearch
set ignorecase
set incsearch
set showmatch
set smartcase
" }}}

" Folds {{{
set foldcolumn=0
set foldenable
set foldlevel=1
set foldmethod=indent
" }}}

" Wildmenu {{{
set path+=**
set wildmenu
set wildmode=list:full
set wildignore+=*.png,*.jpg,*.jpeg,*.gif
set wildignore+=__init__.py,*.pyc
set wildignore+=deps,_build,rel
" }}}

" Misc {{{
set fileformat=unix
set formatoptions-=cro
set iskeyword+=-
set shortmess=aIOt
set showtabline=1
set timeoutlen=500
set visualbell t_vb=
" disable netrw plugin
let g:loaded_netrwPlugin = 0
" }}}
